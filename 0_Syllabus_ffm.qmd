---
title: "Textanalyse in R: eine Einführung"
author: "Johannes B. Gruber"
format:
  pdf:
    toc: false
bibliography: references.bib
---

# Introduction {-}

The availability of text data has exploded in the last two decades.
First the availability of text through digital archives, then the advent of digital media communication like online news and press releases and most recently public communication of non-elite actors on social media.
For political science this opens up exciting new possibilities for research as many processes which occurred in private or elite venues is now accessible.
At the same time, the sheer amount of data makes manually analysing meaningul fractions of it impossible.

This course is an introduction to the available methods and software for automated content analysis.
The 101 in it's name is meant to indicate that this is a introductory course.
However, the introductory part is into automated content analysis while the expectation is that you are comfortable with R, the programming language used in this course.

What should be clear about the course from the beginning though is that despite recent advances, "All Quantitative Models of Language Are Wrong—But Some Are Useful" [@grimmerTextDataPromise2013 p.3].
The primary goal of this course is thus to understand the types of questions we can ask with text, and how to go about answering them.

In this two-day course, we are going to look at the different topics mostly from a practical standpoint with a little theoretical and statistical background where necessary.
The schedule looks as follows:

```{r}
#| message: false
#| echo: false
library(tidyverse)
library(gt)
lessons <- list(
  `1` = "[Overview, Background and Some Theory](#overview-background-and-some-theory)",
  `2` = "[R Basics Repetition](#r-basics-repetition)",
  `3` = "[Obtaining Text Data](#obtaining-text-data)",
  `4` = "[Dictionary methods](#dictionary-methods)",
  `5` = "[Text Correlations and Regression Models](#text-correlations-and-regression-models)",
  `6` = "[Text Correlations (co-occurrence analysis)](#correlations)",
  `7` = "[Supervised Classification Methods](#supervised-classification-methods)",
  `8` = "[Unsupervised Classification Methods](#unsupervised-classification-methods)",
  `9` = "[Text Pre-Processing](#text-pre-processing)",
  `10` =" [Regular Expressions, String Hacking, Part-of-Speech Tagging](#regular-expressions-string-hacking-part-of-speech-tagging)",
  `11` = "[Word Embeddings and Deep Learning](#word-embeddings-and-deep-learning)",
  `12` = "[Big Data Projects: Some Tips](#big-data-projects-some-tips)"
)


tibble::tribble(
  ~time,          ~`Day 1`,	    ~`Day 2`,
  "09:00-10:30",	lessons[[1]],	lessons[[5]],
  "11:00:12:30",	lessons[[2]],	lessons[[7]],
  "14:00-15:30",	lessons[[3]],	lessons[[8]],
  "16:00-17:30",	lessons[[4]],	lessons[[11]],
) %>%
  gt() %>%
  fmt_markdown(columns = everything())
```


# Overview, Background and Some Theory

This session focuses on the general concepts in ACA, like pre-processing, the documents-term-matrix, dimensionality reduction and so on. 
It also provides a general overview on ACA-methods, how they are implemented in software and what kinds of research questions and designs are possible (or at least which have been asked before).

Additional Readings:

1. Taking Stock of the Toolkit [@boumansTakingStockToolkit2016]
2. Text Analysis in R [@welbersTextAnalysis2017]
3. Text as Data: The Promise and Pitfalls of Automatic Content Analysis Methods for Political Texts [@grimmerTextDataPromise2013]
4. Computer-Assisted Text Analysis for Comparative Politics  [@lucasComputerAssistedTextAnalysis2015]


# R Basics Repetition

A brief run-through of some basic principles in `R`. 
I expect that you have worked with `R` before and can already do some things.
But even after using R for a while, it doesn't hurt to go over some fundamentals and clear out common misunderstandings of the language.
Covered concepts:

- Installing packages, help files and other sources for help
- Writing functions
- Loops
- if statements
- Objects and classes in R
- R base vs Tidyverse
- Pipes in R
- ggplot2: core concepts and misunderstandings
- Important shortcuts in RStudio

Additional Readings:

1. Advanced R [@wickhamgadvancedr2019]
2. ggplot2: Elegant Graphics for Data Analysis [@wickhamggplot22019]


# Obtaining Text Data

There are a myriad of ways to analyse text in `R`.
If you ever want to make use of them though you have to somehow get your own data into `R`.
This can be a bit boring and so this session might not be the most impressive one.
But by the end of it, you will be able to use your own data in the coming sessions. 
And isn't that exciting!

Key Points:

- Reading in common file formats (txt, PDF, docx and so on).
- Case 1: Use of newspaper data
- Case 2: Web-Scraping (a brief overview)
- Case 3: Twitter scraping (How to make an account, install rtweet)

Additional Readings:

- none; but think about what sources of text data you want to use and bring it along if possible.


# Dictionary Methods

Dictionary approaches belong to the oldest and simplest methods in ACA.
The key concept here is the dictionary, which is a list of words along with a category, such as positive/negative sentiment, anger/joy, geo-locations and so on.
By checking if texts contain words from the category, we can infer if each text belongs to the category defined in the dictionary.
In this session, we use a simple example and discuss the pro and cons of dictionary methods.

Additional Readings:

- Text Mining with R chapter [2](https://www.tidytextmining.com/sentiment.html) [@SilgeTextMining2020]


# Text Correlations and Regression Models

One of the fundamental ideas of ACA is that text is just another form of data.
Once we obtained the text and turned it into a document-term-matrix, it is not fundamentally different from other forms of statistical data any more.
Therefore we can perform all sorts of statistical analysis on it -- like correlations and regressions.
In this session, we perform these techniques on example datasets to answer first research questions.

Additional Readings:

- Text Mining with R chapter [4.1.4](https://www.tidytextmining.com/ngrams.html#visualizing-a-network-of-bigrams-with-ggraph) [@SilgeTextMining2020]
- Supervised Machine Learning for Text Analysis in R [6](https://smltar.com/mlregression.html) [@SilgeMachineLearning2021]


# Supervised Classification Methods

The idea behind supervised classification or supervised learning approaches is that you train a model to emulate the behaviour of a human coder. 
Specifically, a human classifies texts into categories, such as positive/negative tone, spam/important emails and so on.
By analysing the statistical distribution of words in the two or more categories, a model can predict the class of new unclassified material.

Additional Readings:

- Supervised Machine Learning for Text Analysis in R
[7](https://smltar.com/mlclassification.html) [@SilgeMachineLearning2021]


# Unsupervised Classification Methods

Unsupervised classification or unsupervised learning is a type of machine learning where the computer is not given any labels or categories to assign to data.
Instead, the computer is tasked with finding patterns and relationships in the data and then assigning categories to the data based on those patterns.
This is done through a process called dimension reduction, which is similar to techniques like Principal Component Analysis (PCA) or factor analysis.
To use this method, the researcher needs to define the number of categories they want the computer to find and then interpret the results afterwards.
One of the most popular methods for unsupervised classification is Latent Dirichlet Allocation (LDA) topic modeling.
This method assigns a probability to each word in a corpus to belong to a certain topic, and then calculates the probability of each text in the corpus belonging to a certain topic.
In this way, the computer can find patterns and relationships in the data and assign categories based on those patterns.

Additional Readings:

- Probabilistic topic models. [@bleiTopicModels2012]
- Islamophobia and Media Portrayals of Muslim Women [@termanIslamophobia2017]


# Word Embeddings and Deep Learning

This session introduces newer advances of text analysis that go beyond traditional bag-of-words models.
Word embeddings are a way to represent words as vectors that capture their semantic meaning, and deep learning models use neural networks to process and analyze text data.
Students will learn about popular word embedding algorithms like Word2Vec and GloVe, as well as popular deep learning models for text analysis like CNNs and RNNs.
Through demonstrations, students will learn how to use pre-trained word embeddings and implement simple deep learning models for text classification.
The session will also explore real-world applications of these techniques in areas like sentiment analysis and text classification.


Addional Readings: 

- Supervised Machine Learning for Text Analysis in R
[8-10](https://smltar.com/mlclassification.htmlhttps://smltar.com/dldnn.html) [@SilgeMachineLearning2021]


# References {-}

